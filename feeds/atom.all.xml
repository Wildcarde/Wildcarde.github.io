<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Putting the Pieces Together</title><link href="https://blog.shadowgears.com/" rel="alternate"></link><link href="https://blog.shadowgears.com/feeds/atom.all.xml" rel="self"></link><id>https://blog.shadowgears.com/</id><updated>2024-02-28T00:00:00-05:00</updated><entry><title>Engineering Notebook Rules of Engagement</title><link href="https://blog.shadowgears.com/Engineering-Notebook-Rules-Engagement.html" rel="alternate"></link><published>2024-02-28T00:00:00-05:00</published><updated>2024-02-28T00:00:00-05:00</updated><author><name>Garrett</name></author><id>tag:blog.shadowgears.com,2024-02-28:/Engineering-Notebook-Rules-Engagement.html</id><summary type="html">&lt;h2 id="republishing"&gt;Republishing&lt;/h2&gt;
&lt;p&gt;I&amp;#8217;ve decided to republish this article as I recently bought a new round of Maker notebooks. They&amp;#8217;re still very well put together books with a few minor fit and finish issues. Of the ones I received this week, one had the elastic cord ripped out of the …&lt;/p&gt;</summary><content type="html">&lt;h2 id="republishing"&gt;Republishing&lt;/h2&gt;
&lt;p&gt;I&amp;#8217;ve decided to republish this article as I recently bought a new round of Maker notebooks. They&amp;#8217;re still very well put together books with a few minor fit and finish issues. Of the ones I received this week, one had the elastic cord ripped out of the back and two the glue had failed on the small pocket in the back of the notebook. The first issue was easily solved with a small dab of 5 minute epoxy and the other two issue with small pieces of double sided tape but it is disappointing to see that they aren&amp;#8217;t getting quite the attention they did when first made. That said they have also gotten a small visual refresh that is very pleasant on the eyes so it&amp;#8217;s not all&amp;nbsp;bad.&lt;/p&gt;
&lt;h2 id="original-article-from-2008"&gt;Original Article From&amp;nbsp;2008&lt;/h2&gt;
&lt;p&gt;So a few days ago my Makers Notebook showed&amp;nbsp;up.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Maker Notebook Photograph" src="https://blog.shadowgears.com/maker_notebook_515x515_grande.jpg"&gt;&lt;/p&gt;
&lt;p&gt;All in all as for the design of the notebook, it&amp;#8217;s fantastic. While some of the information in the back of the book may seem obtuse or just silly it&amp;#8217;s all there in either good fun or because it really is important. In fact it pretty much fills the requirements of what I&amp;#8217;d want in an engineering notebook to a T with a few nice little extras (sticker swag&amp;nbsp;anyone?)&lt;/p&gt;
&lt;p&gt;So first a list of things I look for in a&amp;nbsp;notebook.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Hard bound book with impossible to remove&amp;nbsp;pages&lt;/li&gt;
&lt;li&gt;Grid&amp;nbsp;paper&lt;/li&gt;
&lt;li&gt;Isaac Asimov&amp;#8217;s three laws of robot behavior (ok&amp;#8230; I admit that ones&amp;nbsp;new)  &lt;/li&gt;
&lt;li&gt;A place&amp;nbsp;marker&lt;/li&gt;
&lt;li&gt;Relatively portable size (I&amp;#8217;m looking at you, giant ass staples engineering&amp;nbsp;notebooks&amp;#8230;)  &lt;/li&gt;
&lt;li&gt;A good way to keep it closed (in this case a giant rubber band did the&amp;nbsp;trick)  &lt;/li&gt;
&lt;li&gt;Page&amp;nbsp;Numbers&lt;/li&gt;
&lt;li&gt;Space for a Table of Contents (this isn&amp;#8217;t required but it is pretty handy, alternatively you can sacrifice the first 2 pages to this and get the same&amp;nbsp;effect)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The reasoning behind this should be pretty easy to figure out. But I&amp;#8217;ll fill in the blanks anyway after I address the few simple rules that I follow when working with an engineering&amp;nbsp;notebook.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Never attempt to remove a page from the note book. That&amp;#8217;s your hard work your attempting to destroy, if it doesn&amp;#8217;t work make a few notes why and move to the next&amp;nbsp;page.&lt;/li&gt;
&lt;li&gt;Never scribble or white out anything, if it&amp;#8217;s spelled wrong cross it out with 1 line and rewrite it. On the other hand if it&amp;#8217;s just incorrect, make a note that it is and where in the note book the correct information can be found.&lt;br&gt;
* Make sure you sign and date every page you do work on. This is especially important for shared notebooks but it&amp;#8217;s also applicable to ones stored in company vaults. In that case you typically leave an area for you and a quartermaster to sign and date it. This can save your but in case of things like patent disputes so don&amp;#8217;t shirk the&amp;nbsp;responsibility.&lt;/li&gt;
&lt;li&gt;Place a note at the top of every page noting which project or sub-project (if the whole notebook is for a single project) that page is dedicated&amp;nbsp;to.&lt;/li&gt;
&lt;li&gt;Do not use one page for more than one&amp;nbsp;subject.&lt;/li&gt;
&lt;li&gt;For a personal notebook it&amp;#8217;s not usually necessary but if your performing intricate math steps, write them down. This may be your notebook but it&amp;#8217;s also a map of your ideas in solving a problem, if nobody else can read it then it&amp;#8217;s kinda&amp;nbsp;useless.&lt;/li&gt;
&lt;li&gt;When using a notebook for multiple projects note the last page that project was worked on and if you can remember to do so, note the next one. This will let you traverse your notebook in a more sane&amp;nbsp;manner.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Now this is all pretty straight forward but there&amp;#8217;s a few things that might need some explaining. First why use a hard bound book instead of one of the build your own notebooks where you can freely add or remove pages punched with a special hole punch. Because you can remove the pages, it may seem convenient to be able to keep all of your notes in order by adding them to the back of the section they are in but this isn&amp;#8217;t always a good thing. For explanation by example I&amp;#8217;ll give you a few scenarios where this would be bad. First, the addition and subtraction of pages from the notebook immediately disqualify it from being used as a running record of your work as it can no longer be used in patent cases and the like. This is because it&amp;#8217;s now to easy to doctor (by a significant margin). Second, pages can fall out; how awful would it be to solve a problem on the train and lose the brilliant solution on the way from the station to the&amp;nbsp;office?&lt;/p&gt;
&lt;p&gt;Why would you want a relatively portable size? you may ask. But if anyone has ever owned a really big engineering notebook (or say&amp;#8230; the &lt;span class="caps"&gt;NSA&lt;/span&gt; Red Book) you already know the answer to that. It fits in nothing, the books are about the size of a 17&amp;#8221; laptop and nowhere near as useful. They are as likely or more to get in your way as they are to be useful for actually storing a brain dump of&amp;nbsp;info.&lt;/p&gt;
&lt;h3 id="tldr"&gt;&lt;span class="caps"&gt;TLDR&lt;/span&gt;:&lt;/h3&gt;
&lt;p&gt;For the vast majority of people these measures for a notebook will appear to be overkill, and&amp;#8230; they are. If you don&amp;#8217;t have a need for a solid replicable and provable notebook you can happily write the post off as the ramblings of a mad man and you&amp;#8217;d be acting pretty fair. If you need a notebook I recommend visiting your local staples or book store. They will undoubtedly have a wide swath of wonderful notebooks that you don&amp;#8217;t need to apply any of the above requirements or rules to and be perfectly happy. I actually have a few notebooks of this nature storing things like meeting notes that I plan to digitize or process and chuck. My sketch book is a bit more robust but is just a big bound pack of blank paper so not much more&amp;nbsp;helpful.&lt;/p&gt;
&lt;h3 id="brass-tacks"&gt;Brass&amp;nbsp;Tacks:&lt;/h3&gt;
&lt;p&gt;For dyed in the wool note takers these measures probably aren&amp;#8217;t nearly enough and I should have covered suggestions and rules for creating volumes of work and proper guidelines for digitally backing up your notebooks with a scanner. If your requirements are this high or strict, you don&amp;#8217;t need my advice, keep on trucking. For people who are just trying to find some sane and easy to follow rules for a technical notebook (or any notebook really, but I don&amp;#8217;t go thru this much effort unless I&amp;#8217;m trying to build something) then these rules will get you most of the way if not all the way to where you need to go. Take what you need for this blog and discard the rest, like any set of guidelines not everything here will cover all of your requirements and may in fact get in the way depending on what your trying to&amp;nbsp;do.&lt;/p&gt;</content><category term="Opinion"></category><category term="Notebooks"></category><category term="Organization"></category><category term="Opinion"></category></entry><entry><title>Un-Breaking Docker and Firewalld Integration</title><link href="https://blog.shadowgears.com/unbreaking-docker-firewalld.html" rel="alternate"></link><published>2023-11-06T00:00:00-05:00</published><updated>2023-11-06T00:00:00-05:00</updated><author><name>Garrett</name></author><id>tag:blog.shadowgears.com,2023-11-06:/unbreaking-docker-firewalld.html</id><summary type="html">&lt;p&gt;This article explains how to modify docker and firewalld to make them operate together instead of docker bypassing firewalld and allowing all&amp;nbsp;connections.&lt;/p&gt;</summary><content type="html">&lt;h1 id="the-problem"&gt;The&amp;nbsp;Problem&lt;/h1&gt;
&lt;p&gt;While it&amp;#8217;s not obvious at first blush, the default configuration for firewalld and docker is&amp;#8230; bad. At least on systems that do not use iptables as their back end firewall technology. Like, your firewalld rules don&amp;#8217;t apply to traffic destine for docker containers bad. An issue discovered at my work when one of our coworkers asked &amp;#8216;Hey, why can I get to the new ticket system without&amp;nbsp;vpn?&amp;#8217;.&lt;/p&gt;
&lt;p&gt;This is due to the fact that while firewalld is managing nftables or other firewall back ends, Docker continues to lean on iptables for it&amp;#8217;s filtering and forwarding. This results in the forwards sidestepping firewalld entirely exposing the docker ports to the wild. This is a problem if you work somewhere with hosts sitting on the public internet. In the case of our deployments the older CentOS 7 systems didn&amp;#8217;t manifest this behavior because we had them default to iptables instead. However our new systems use Rocky 9, and that revealed this particular&amp;nbsp;weakness.&lt;/p&gt;
&lt;h1 id="the-goal"&gt;The&amp;nbsp;Goal&lt;/h1&gt;
&lt;p&gt;&lt;span class="caps"&gt;FIX&lt;/span&gt; &lt;span class="caps"&gt;THIS&lt;/span&gt;. But more seriously, the goal is to keep our firewalld automation in place and have those configurations honored by docker. To do this we are going to have to make some big and small changes both to docker and&amp;nbsp;firewalld.&lt;/p&gt;
&lt;h2 id="docker-modifications"&gt;Docker&amp;nbsp;Modifications&lt;/h2&gt;
&lt;p&gt;There&amp;#8217;s three major things to change, iptables automation, permanently created docker networks, and your compose files. Updating each of these will have impacts on the docker daemon, or specific running containers. So this will involve a downtime for the component parts as you update&amp;nbsp;them.&lt;/p&gt;
&lt;h3 id="iptables"&gt;IPTables&lt;/h3&gt;
&lt;p&gt;First up, you need to disable the docker IPTables automation. This can be done in a few ways depending on how you manage docker, for a vanilla install you can simply add &lt;code&gt;{"iptables": false}&lt;/code&gt; to your daemon file (&lt;code&gt;/etc/docker/daemon.json&lt;/code&gt;). And restart the service with &lt;code&gt;systemctl restart docker&lt;/code&gt;. Initially this will not change anything, as demonstrated by &lt;code&gt;iptables -S&lt;/code&gt;, however if you run &lt;code&gt;firewall-cmd --reload&lt;/code&gt; it will nuke those rules and everything will break (this is&amp;nbsp;fine).&lt;/p&gt;
&lt;h3 id="docker-networks"&gt;Docker&amp;nbsp;Networks&lt;/h3&gt;
&lt;p&gt;For docker networks, we need to solve a thorny issue that shows up because of the change above. Unfortunately the &lt;code&gt;iptables&lt;/code&gt; flag in the docker daemon is overloaded and pulling double duty to also add virtual network adapters to the docker firewall zone in firewalld. This is required for containers to be able to receive traffic. So, for any networks that you create you must choose a predictable name for that network. This can be done with the &lt;code&gt;--opt&lt;/code&gt; command while creating the network. After that you can add that named network to the firewalld zone permanently. For example we use a &lt;code&gt;proxy&lt;/code&gt; network for all containers that need to be made available via Traefik. We&amp;#8217;ll need to recreate that network with a fixed name as follows (&lt;em&gt;note&lt;/em&gt;: if you have a pre-existing named network, you will need to remove it&amp;nbsp;first):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;docker&lt;span class="w"&gt; &lt;/span&gt;network&lt;span class="w"&gt; &lt;/span&gt;create&lt;span class="w"&gt; &lt;/span&gt;--opt&lt;span class="w"&gt; &lt;/span&gt;com.docker.network.bridge.name&lt;span class="o"&gt;=&lt;/span&gt;proxy&lt;span class="w"&gt; &lt;/span&gt;proxy
$&lt;span class="w"&gt; &lt;/span&gt;firewall-cmd&lt;span class="w"&gt; &lt;/span&gt;--zone&lt;span class="o"&gt;=&lt;/span&gt;docker&lt;span class="w"&gt; &lt;/span&gt;--add-interface&lt;span class="o"&gt;=&lt;/span&gt;proxy&lt;span class="w"&gt; &lt;/span&gt;--permanent
$&lt;span class="w"&gt; &lt;/span&gt;firewall-cmd&lt;span class="w"&gt; &lt;/span&gt;--reload&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;## required to enable permanent changes&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The above must be done for all custom networks that do not use &lt;code&gt;docker0&lt;/code&gt; as their virtual network&amp;nbsp;interface.&lt;/p&gt;
&lt;h3 id="docker-compose"&gt;Docker&amp;nbsp;Compose&lt;/h3&gt;
&lt;p&gt;A similar update to above has to be done for compose files, however this ones a bit more awkward. For each compose entry you wish to use you need to choose a name for each of the related network. We&amp;#8217;ll be substituting that in for &lt;code&gt;&amp;lt;vnet_name&amp;gt;&lt;/code&gt; in each of the below code samples to make things&amp;nbsp;work.&lt;/p&gt;
&lt;p&gt;First lets add the name to the firewalld&amp;nbsp;allows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;firewall-cmd&lt;span class="w"&gt; &lt;/span&gt;--zone&lt;span class="o"&gt;=&lt;/span&gt;docker&lt;span class="w"&gt; &lt;/span&gt;--add-interface&lt;span class="o"&gt;=&lt;/span&gt;&amp;lt;vnet_name&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;--permanent
$&lt;span class="w"&gt; &lt;/span&gt;firewall-cmd&lt;span class="w"&gt; &lt;/span&gt;--reload&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="c1"&gt;##required to make this configuraiton active&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then lets update the docker compose file, you&amp;#8217;ll want to add the following if you have a &amp;#8216;free standing&amp;#8217; compose file for each service entry (ie, you aren&amp;#8217;t using say a traefik proxy along with&amp;nbsp;this):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;services&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;service_name&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;networks&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;&amp;lt;vnet_name&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And then at the bottom of the compose file&amp;nbsp;add:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;networks&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;vnet_name&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;driver_opts&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;com.docker.network.bridge.name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;&amp;lt;vnet_name&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This will force compose to create bridge networks of the specific name and ensure all defined services are joined to that network&amp;nbsp;name.&lt;/p&gt;
&lt;p&gt;If you wanted to do this for a system that was using traefik and an external proxy network it would look like&amp;nbsp;this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;services&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;service_name_that_needs_reverse_proxy&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;networks&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;&amp;lt;vnet_name&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;proxy&lt;/span&gt;
&lt;span class="c1"&gt;## ...      &lt;/span&gt;
&lt;span class="nt"&gt;networks&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;proxy&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;external&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;true&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;vnet_name&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;driver_opts&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;com.docker.network.bridge.name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;&amp;lt;vnet_name&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="firewalld-modifications"&gt;Firewalld&amp;nbsp;Modifications&lt;/h2&gt;
&lt;p&gt;This comes down to two quick things. First any &lt;em&gt;firewalld zones&lt;/em&gt; you wish for docker containers to be able to transmit out to via nat, you will need to add the masquerade command. And as mentioned above, you will need to make sure all docker interfaces are in the docker zone so forwarding&amp;nbsp;works.&lt;/p&gt;
&lt;h3 id="masquerade-interfaces"&gt;Masquerade&amp;nbsp;Interfaces&lt;/h3&gt;
&lt;p&gt;If you wanted to enable masquerade on your default zone, which for many configurations is the only thing you will need, the following will get you&amp;nbsp;setup:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;firewall-cmd&lt;span class="w"&gt; &lt;/span&gt;--add-masquerade&lt;span class="w"&gt; &lt;/span&gt;--permanent
$&lt;span class="w"&gt; &lt;/span&gt;firewall-cmd&lt;span class="w"&gt; &lt;/span&gt;--reload&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;## required to activate permanent rules&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;At this point, all docker containers should be able to go out your default interfaces. If you have any other active zones, for some multi-homed devices for example, you will want to add &lt;code&gt;--zone&lt;/code&gt; commands above for those additional active zones. You can see active zones with &lt;code&gt;firewall-cmd --get-active-zones&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id="zoning-docker-interfaces"&gt;Zoning Docker&amp;nbsp;Interfaces&lt;/h3&gt;
&lt;p&gt;There&amp;#8217;s a quick additional tweak that needs to be made here. You simply need to add the &lt;code&gt;docker0&lt;/code&gt; interface into the docker zone so it&amp;#8217;s there by default. The following will add this for&amp;nbsp;you:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;firewall-cmd&lt;span class="w"&gt; &lt;/span&gt;--zone&lt;span class="o"&gt;=&lt;/span&gt;docker&lt;span class="w"&gt; &lt;/span&gt;--add-interface&lt;span class="o"&gt;=&lt;/span&gt;docker0&lt;span class="w"&gt; &lt;/span&gt;--permanent
$&lt;span class="w"&gt; &lt;/span&gt;firewall-cmd&lt;span class="w"&gt; &lt;/span&gt;--reload&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;## again required to setup permanent changes&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id="conclusion"&gt;Conclusion&lt;/h1&gt;
&lt;p&gt;All in all this isn&amp;#8217;t &lt;em&gt;that&lt;/em&gt; annoying, but the fact that it breaks the &amp;#8216;just works&amp;#8217; nature of docker is a huge bummer. I wish that wasn&amp;#8217;t the case if I&amp;#8217;m being totally honest. At work we are migrating all of this to be managed by our puppet layer so I&amp;#8217;ll be adding a puppet fact that detects the docker network names and adds them to the run time docker zone, and purges them when they are no longer in use to replicate this behavior, but honestly. That shouldn&amp;#8217;t be necessary, but in the mean time I hope you find this&amp;nbsp;helpful!&lt;/p&gt;
&lt;h1 id="areas-of-improvement"&gt;Areas of&amp;nbsp;Improvement&lt;/h1&gt;
&lt;p&gt;Unfortunately the &amp;#8216;proper&amp;#8217; fix for this is in the court of Docker / the Moby project. If they added a &lt;code&gt;firewalld&lt;/code&gt; flag along side the &lt;code&gt;iptables&lt;/code&gt; flag that simply added the virtual network device names to the docker zone and enabled masquerade for publicly facing&amp;nbsp;zones.&lt;/p&gt;
&lt;p&gt;It should also be noted, all of the above only applies to &lt;span class="caps"&gt;IPV4&lt;/span&gt;. For &lt;span class="caps"&gt;IPV6&lt;/span&gt;? I have no idea, we don&amp;#8217;t currently use it at work and I&amp;#8217;ve got no use for it at home. I wouldn&amp;#8217;t be surprised if it had some weird behavior there as well&amp;nbsp;tho.&lt;/p&gt;
&lt;h1 id="post-publication-gotchas"&gt;Post Publication&amp;nbsp;Gotchas&lt;/h1&gt;
&lt;h2 id="12-7-23"&gt;12-7-23&lt;/h2&gt;
&lt;p&gt;We found at work that despite best efforts to avoid it, no matter what we did we could not get firewalld to fully dispose of the iptables rules without a full reboot on one of our servers (rock9). After a reboot it worked exactly as&amp;nbsp;expected.&lt;/p&gt;</content><category term="HowTo"></category><category term="firewalld"></category><category term="docker"></category><category term="Linux"></category><category term="iptables"></category></entry><entry><title>Steam Deck Remote Shell and File Access</title><link href="https://blog.shadowgears.com/steamdeck-quickshell-fileaccess.html" rel="alternate"></link><published>2023-10-28T00:00:00-04:00</published><updated>2023-10-28T00:00:00-04:00</updated><author><name>Garrett</name></author><id>tag:blog.shadowgears.com,2023-10-28:/steamdeck-quickshell-fileaccess.html</id><summary type="html">&lt;p&gt;A quick write up on how to load files directly onto the Steam Deck and how to get a remote command prompt for more advanced&amp;nbsp;control.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Accessing a steam deck remotely can be useful for a variety of reasons: adding files to the &lt;span class="caps"&gt;SD&lt;/span&gt; card, modifying &lt;span class="caps"&gt;OS&lt;/span&gt; settings, general purpose computing, and viewing error logs, to name a few. And while Valve may not be shouting it from the roof top, they&amp;#8217;ve made this incredibly easy to do as long as you&amp;#8217;ve got a separate computer to work from. This is done via the &lt;a href="https://partner.steamgames.com/doc/steamdeck/loadgames#3"&gt;SteamOS Devkit Client&lt;/a&gt; application published by Valve and few additional details just to make things work as well as possible. This software allows you to pair a steam deck to a computer for the purposes of remote control and management: you can change the &lt;span class="caps"&gt;OS&lt;/span&gt; mode, take screen shots, transfer files, access a remote shell, and monitor system performance on a Steam Deck once properly configured. The software is meant to be used by game developers that would like to load their games onto a Steam Deck directly, but can easily do double duty to simplify access for&amp;nbsp;non-devs.&lt;/p&gt;
&lt;h1 id="prereqs"&gt;Prereqs&lt;/h1&gt;
&lt;p&gt;Before you can remote into the device you will need some specific software installed to facilitate the&amp;nbsp;setup.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;a href="https://partner.steamgames.com/doc/steamdeck/loadgames#3"&gt;SteamOS Devkit Client&lt;/a&gt; software needs to be installed through the Steam Client. You can use this link to directly install the client through the Steam software: &lt;code&gt;steam://install/943760&lt;/code&gt; &lt;em&gt;note&lt;/em&gt;: you do not need the server installer, the Steam Deck already has that software&amp;nbsp;pre-loaded.&lt;/li&gt;
&lt;li&gt;The open source file transfer tool &lt;a href="https://filezilla-project.org/"&gt;Filezilla&lt;/a&gt; will need to be installed on your&amp;nbsp;computer.&lt;/li&gt;
&lt;li&gt;Your computer and the Steam Deck need to be on the same network. Ideally the Steam Deck should be auto detected with mDNS, however not all networks support that. Retrieve the &lt;span class="caps"&gt;IP&lt;/span&gt; for the WiFi connection on the Steam Deck and have it available to help with pairing. To simplify this you can set the Steam Deck to a permanent &lt;span class="caps"&gt;IP&lt;/span&gt; on your&amp;nbsp;router.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;With the above in place there are a few more steps to get everything&amp;nbsp;working.&lt;/p&gt;
&lt;h1 id="pairing"&gt;Pairing&lt;/h1&gt;
&lt;p&gt;Depending on what &lt;span class="caps"&gt;OS&lt;/span&gt; you are using there&amp;#8217;s a few different ways this can go. Starting with launching the devtools&amp;nbsp;application.&lt;/p&gt;
&lt;h2 id="starting-the-devtools"&gt;Starting the&amp;nbsp;devtools&lt;/h2&gt;
&lt;p&gt;Unfortunately the client works somewhat inconsistently across operating&amp;nbsp;systems.&lt;/p&gt;
&lt;p&gt;In windows you can simply navigate to &lt;code&gt;SteamOS Devkit Client&lt;/code&gt; in your software library and hit the Launch button. This has worked as expected each time I&amp;#8217;ve launched&amp;nbsp;it.&lt;/p&gt;
&lt;p&gt;However on Linux it can get somewhat more finicky. While you can install the application through Steam on Linux, for me at least it does not launch successfully from the Steam client (Fedora 36, &lt;span class="caps"&gt;KDE&lt;/span&gt;, WayLand) however it will happily launch from a command line. Making this work mostly comes down to knowing where the Steam programs are installed on your device, typically this is a hidden folder in your home directory as that is the default. Assuming you are in your home directory and have Steam installed using it&amp;#8217;s defaults this command or some similar variation of it will get you up and running: &lt;code&gt;python3.10 ./.var/app/com.valvesoftware.Steam/.local/share/Steam/steamapps/common/SteamOSDevkitClient/linux-client/devkit-gui-cp310.pyz&lt;/code&gt; (&lt;em&gt;note&lt;/em&gt;: this filename at the end may change as versions update, simply update to the latest devkit-gui python file; additionally python 3.11 does not work so you will need to install 3.10 for this to&amp;nbsp;work)&lt;/p&gt;
&lt;p&gt;Either way, you should see this screen pop up on your&amp;nbsp;laptop/desktop:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Blank Steam dev client pane" src="https://blog.shadowgears.com/steamos-dev-blank.png"&gt;&lt;/p&gt;
&lt;h2 id="enabling-pairing-on-the-steamdeck"&gt;Enabling pairing on the&amp;nbsp;steamdeck&lt;/h2&gt;
&lt;p&gt;This is actually already enabled out of the box on the Steam Deck, it&amp;#8217;s more a question of finding where it lives than anything. If you press the &lt;code&gt;steam&lt;/code&gt; button and scroll all the way down to the bottom of the menu there is a &lt;code&gt;Developer&lt;/code&gt; pane available. The third button down from the top of this pane will put the device in to pairing mode. Once the device is in pairing mode it should show up automatically in the Steam dev kit client. If it does not show up and you&amp;#8217;ve assigned a permanent &lt;span class="caps"&gt;IP&lt;/span&gt; address to the device, simply type that &lt;span class="caps"&gt;IP&lt;/span&gt; into the space that says &lt;code&gt;Connect to Steam Deck by IP&lt;/code&gt; and it should connect&amp;nbsp;immediately.&lt;/p&gt;
&lt;h2 id="further-configuration"&gt;Further&amp;nbsp;Configuration&lt;/h2&gt;
&lt;p&gt;At this point you should have will have a dump of data and some additional buttons to work with. First thing you&amp;#8217;ll need to do is set a password on the device, make sure you record this password in a password manager so you don&amp;#8217;t lose&amp;nbsp;it.&lt;/p&gt;
&lt;p&gt;After that you&amp;#8217;ll be able to use the button &lt;code&gt;Remote Shell&lt;/code&gt; to open an ssh terminal on the device. Additionally if you have installed FileZilla properly, when you click &lt;code&gt;Browse Device Files&lt;/code&gt; it will launch and ask you for the password configured above. You can also take screenshots directly via the &lt;code&gt;Take Screenshot&lt;/code&gt; button, these will go into the folder indicated directly to the left of the button on your local machine, as demonstrated below. If you change the value of &lt;code&gt;Set session&lt;/code&gt; to the &lt;code&gt;plasma-x11&lt;/code&gt; option it will swap to desktop mode. Setting it back to &lt;code&gt;gamescope&lt;/code&gt; should bring it back to the standard Steam Deck interface but I&amp;#8217;ve had some issues with that in the past, it&amp;#8217;s better to just use the desktop shortcut from the deck itself. This issue seems to manifest more if you use the &lt;code&gt;plasma-wayland&lt;/code&gt; option so &lt;span class="caps"&gt;YMMV&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;An example screenshot captured using the devkit client&lt;/em&gt;&lt;br&gt;
&lt;img alt="Screenshot Capture From Steam Devkit Management Tool" src="https://blog.shadowgears.com/2023-screenshot-example.png"&gt;&lt;/p&gt;
&lt;h1 id="conclusion"&gt;Conclusion&lt;/h1&gt;
&lt;p&gt;At this point the system is yours to muck with, doing so will require some familiarity with Linux that is out of scope for this post. But you now have full file access, so if you want to load the system up with emulator friendly games you can do so via Filezilla. If you want to configure a WireGuard network interface, you can do so from the ssh terminal. All in all this is an incredibly direct way of managing the device and allows you to plumb some of the deeper &amp;#8216;it really is just Linux under the covers&amp;#8217; details of the&amp;nbsp;machine.&lt;/p&gt;</content><category term="HowTo"></category><category term="steamdeck"></category><category term="remote access"></category><category term="ssh"></category><category term="filezilla"></category></entry><entry><title>Setting up Moonlight and Sunshine to Stream to Steamdeck</title><link href="https://blog.shadowgears.com/moonlight-steamdeck-0.html" rel="alternate"></link><published>2023-10-22T00:00:00-04:00</published><updated>2023-10-22T00:00:00-04:00</updated><author><name>Garrett</name></author><id>tag:blog.shadowgears.com,2023-10-22:/moonlight-steamdeck-0.html</id><summary type="html">&lt;p&gt;An exploration of the configuration of sunshine on a gaming rig to stream to a steamdeck moonlight&amp;nbsp;client.&lt;/p&gt;</summary><content type="html">&lt;h1 id="the-problem"&gt;The&amp;nbsp;Problem&lt;/h1&gt;
&lt;p&gt;While Steam streaming and Sunshine are both pretty straight forward to configure if you don&amp;#8217;t ask much from them, getting them to play nice with a 3 screen computer setup is a relatively poor experience.  This is doubly true if the main screen in use is an ultra-wide as these tools do not change the aspect ratio or screen behaviors when streaming out of the box. So when you have a screen setup that looks like a Tie Fighter it is a less than ideal experience between sunshine and moonlight. Lets solve&amp;nbsp;that!&lt;/p&gt;
&lt;h1 id="the-goal"&gt;The&amp;nbsp;Goal&lt;/h1&gt;
&lt;p&gt;When you initiate a connection to sunshine from moonlight on the steamdeck the system should automatically configure the windows &lt;span class="caps"&gt;PC&lt;/span&gt;. This includes disabling secondary displays and adjusting the resolution to match the steamdeck.  When the moonlight connection is terminated, roll back these changes and restore the screens to their default resolution and&amp;nbsp;state.&lt;/p&gt;
&lt;h2 id="prereqs"&gt;Prereqs&lt;/h2&gt;
&lt;p&gt;There&amp;#8217;s a few things we are going to take for granted here to&amp;nbsp;start.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You (the reader) have an up to date copy of sunshine installed on your desktop of choice. The basics of this are covered in the &lt;a href="https://docs.lizardbyte.dev/projects/sunshine/en/latest/about/installation.html"&gt;sunshine docs&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;You have a copy of moonlight installed and configured as a tile on your steamdeck. This is covered extensively in blog posts and YouTube videos the world over, &lt;a href="https://pimylifeup.com/steam-deck-moonlight/"&gt;this was the first google hit for me and looks to be a solid explanation&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;A copy of NirSoft&amp;#8217;s &lt;a href="https://www.nirsoft.net/utils/multi_monitor_tool.html"&gt;Multi-Monitor Tool&lt;/a&gt;. This should be placed somewhere you can easily locate and reliably find.  I put it inside a folder simply labeled &amp;#8216;programs&amp;#8217; in my home&amp;nbsp;directory.&lt;/li&gt;
&lt;li&gt;A piece of software you want to make work by streaming to your steamdeck, I&amp;#8217;ll be using &lt;a href="https://playnite.link/"&gt;Playnite&lt;/a&gt; as it lets me aggregate all my desktop game stores into one library&amp;nbsp;interface.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="details-to-have-in-front-of-you-before-you-start"&gt;Details to have in front of you before you&amp;nbsp;start&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Full drive path to your program folder, for example: &lt;code&gt;C:\Users\&amp;lt;username&amp;gt;\Programs\&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Additionally make note of where MultiMonitorTool is, ie: &lt;code&gt;C:\Users\&amp;lt;username&amp;gt;\Programs\multimonitortool-x64\&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;How many monitors you have, for example: &lt;code&gt;3&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;The full path to the executable you want to run, for example for Playnite: &lt;code&gt;C:\Users\&amp;lt;username&amp;gt;\AppData\Local\Playnite\Playnite.Fullscreenapp.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;The working directory you want the program to run in, some applications don&amp;#8217;t care but Playnite does so: &lt;code&gt;C:\Users\&amp;lt;username&amp;gt;\AppData\Local\Playnite\&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="howto"&gt;HowTo&lt;/h1&gt;
&lt;p&gt;The basic gist of this is that we are going to use MultiMonitorTool to capture our default configuration, and then the configuration we want for when things are streamed out to the steam deck as configuration files.  Once these are captured we&amp;#8217;ll use a set of batch scripts to swap the two modes back and forth automatically. You could make this more robust using a proper scripting language like powershell or python but for our purposes here a brute force batch file is&amp;nbsp;sufficient.&lt;/p&gt;
&lt;h2 id="capture-monitor-configurations"&gt;Capture Monitor&amp;nbsp;Configurations&lt;/h2&gt;
&lt;p&gt;To get started, in the windows display settings configure your screens as you would like them to be by default. After this is set start up the MultiMonitorTool &lt;span class="caps"&gt;GUI&lt;/span&gt; and you&amp;#8217;ll see a window similar to&amp;nbsp;below.&lt;/p&gt;
&lt;p&gt;&lt;img alt="MultiMonitorTool All Screens Enabled" src="https://blog.shadowgears.com/2023-multimon-all.png"&gt;&lt;/p&gt;
&lt;p&gt;Once everything is configured as desired, simply go to the &lt;code&gt;File&lt;/code&gt; menu button and select &lt;code&gt;Save Monitors Configuration&lt;/code&gt;.  Place this file somewhere easily located and named something sensible. In my case I chose to simply put this in the folder for MultiMonitorTool and name it &lt;code&gt;default.cfg&lt;/code&gt; as this makes the scripts below&amp;nbsp;easier.&lt;/p&gt;
&lt;p&gt;After this is complete, reconfigure the screens to be setup as you would like them to be for the Steamdeck or other streaming target. For the Steamdeck, the native resolution is &lt;code&gt;1280x800&lt;/code&gt;; so I&amp;#8217;ve disabled the right and left screens on my system and set the primary screens resolution to &lt;code&gt;1280x800&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Once this is complete, check that the changes are reflected in MultiMonitorTool&amp;#8217;s &lt;span class="caps"&gt;GUI&lt;/span&gt; (as below) and save this new configuration in the same place as the first.  I named this file simply &lt;code&gt;steamdeck-native.cfg&lt;/code&gt; so it&amp;#8217;s easy to&amp;nbsp;find.&lt;/p&gt;
&lt;p&gt;&lt;img alt="MultiMonitorTool Steamdeck Native Config" src="https://blog.shadowgears.com/2023-multimon-single.png"&gt;&lt;/p&gt;
&lt;h2 id="start-script"&gt;Start&amp;nbsp;Script&lt;/h2&gt;
&lt;p&gt;This start-up script is invoked before launching the Playnite executable, you&amp;#8217;ll need to make a copy of the script below on your local machine. This can be as simply as copying this and pasting it into notepad. This script will turn off your secondary screens and force the resolution settings expected to the primary monitor by invoking the related config&amp;nbsp;file.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; You will need to update the &lt;code&gt;cd&lt;/code&gt; entry to where your MultiMonitorTool executable is&amp;nbsp;located.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sd-native.bat:&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;: disable secondary monitors and switch main monitor to steamdeck native resolution&lt;/span&gt;
&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;:&lt;/span&gt;
&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="k"&gt;ECHO&lt;/span&gt; OFF
&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;: update working directory to location of multi monitor tool software.&lt;/span&gt;
&lt;span class="k"&gt;cd&lt;/span&gt; C:\Users\&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;username&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;\Programs\multimonitortool-x64
&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;: toggle off secondary displays; if you have more than 3 displays,&lt;/span&gt;
&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;: add additional display indexes below to turn off all screens except the primary.&lt;/span&gt;
.\MultiMonitorTool.exe /disable 2 3
&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;: load steamdeck compatible configuration file, if you used a different file name&lt;/span&gt;
&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;: you will need to use that config file name here.&lt;/span&gt;
.\MultiMonitorTool.exe /LoadConfig ./steamdeck-native.cfg
&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;: these changes tend to take a few seconds and we don&amp;#39;t want anything to launch before hand&lt;/span&gt;
&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;: so just a quick pause so it doesn&amp;#39;t launch while things are changing.&lt;/span&gt;
timeout /t 2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="exit-script"&gt;Exit&amp;nbsp;Script&lt;/h2&gt;
&lt;p&gt;This script is functionally the inversion of the above script and is meant to run when exiting a sunshine application. This will forcibly restore the default screen configuration but has some subtleties to be aware of. The &lt;code&gt;/LoadConfig&lt;/code&gt; flag seems to have some issues with restoring several screens at once, however it can simply be run multiple times to force the system to enable all screens. As such you will need to include the line &lt;code&gt;.\MultiMonitorTool.exe /LoadConfig ./default.cfg&lt;/code&gt; once for each monitor you need to&amp;nbsp;re-activate.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; As above you will need to update the &lt;code&gt;cd&lt;/code&gt; command to the appropriate location for your&amp;nbsp;system.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;default-monitor-config.bat&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;:reset the monitor configuration to default&lt;/span&gt;
&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;:&lt;/span&gt;
&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="k"&gt;ECHO&lt;/span&gt; OFF
&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;: update working directory to location of multi monitor tool software.&lt;/span&gt;
&lt;span class="k"&gt;cd&lt;/span&gt; C:\Users\&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;username&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;\Programs\multimonitortool-x64
&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;: re-assert default screen configuration&lt;/span&gt;
.\MultiMonitorTool.exe /LoadConfig ./default.cfg
.\MultiMonitorTool.exe /LoadConfig ./default.cfg
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="putting-it-together-in-an-sunshine-application-entry"&gt;Putting it Together in an Sunshine Application&amp;nbsp;Entry&lt;/h2&gt;
&lt;p&gt;To get started I would make a new application entry in Sunshine for this. While it&amp;#8217;s theoretically possible to make these scripts adapt to using the &lt;code&gt;ENVVAR&lt;/code&gt; values supplied at the bottom of the application page that&amp;#8217;s out of scope for this discussion. Naming the new application entry something that makes it clear it&amp;#8217;s a SteamDeck config will help make things obvious on the client side. I went with simply &lt;code&gt;Playnite - SD&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In this new application entry add the full path to your &lt;code&gt;sd-native.bat&lt;/code&gt; file to the first entry in the &lt;code&gt;Do Command&lt;/code&gt; column. In the neighboring column under &lt;code&gt;Undo Command&lt;/code&gt; place the full path to the &lt;code&gt;default-monitor-config.bat&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;For Playnite specifically it&amp;#8217;s a good idea to add two additional &lt;code&gt;Undo Command&lt;/code&gt; entries of &lt;code&gt;taskkill /f /im Playnite.DesktopApp.exe&lt;/code&gt; and &lt;code&gt;taskkill /f /im Playnite.FullscreenApp.exe&lt;/code&gt;. Adding these ensures terminating the application entry also kills&amp;nbsp;Playnite.&lt;/p&gt;
&lt;p&gt;Under the &lt;code&gt;Command&lt;/code&gt; entry further down the page you will need to add the path to Playnite&amp;#8217;s main executable, this is typically &lt;code&gt;C:\Users\&amp;lt;username&amp;gt;\AppData\Local\Playnite\Playnite.FullscreenApp.exe&lt;/code&gt;, and you&amp;#8217;ll want to set the entry &lt;code&gt;Working Directory&lt;/code&gt; to simply &lt;code&gt;C:\Users\&amp;lt;username&amp;gt;\AppData\Local\Playnite\&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;At this point you are done, the setup should be ready to test out and stream&amp;nbsp;from.&lt;/p&gt;
&lt;h1 id="areas-of-improvement"&gt;Areas Of&amp;nbsp;Improvement&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Currently if something goes pear shaped killing the Playnite session will not terminate the underlying application that was launched by it; I&amp;#8217;m currently not sure how to do this but will add an article if I come up with a solution. It&amp;#8217;s possible using alternative shutdown commands this can be resolved, this will require more&amp;nbsp;experimentation.&lt;/li&gt;
&lt;li&gt;The script for turning off secondary monitors can fail if the systems graphics drivers have been updated but the system has not been rebooted; the most direct work around is to simply reboot after these kinds of&amp;nbsp;updates.&lt;/li&gt;
&lt;/ul&gt;</content><category term="HowTo"></category><category term="multimonitor"></category><category term="ultrawide"></category><category term="automation"></category><category term="gaming"></category><category term="moonlight"></category><category term="sunshine"></category><category term="playnite"></category><category term="windows"></category><category term="steamdeck"></category></entry><entry><title>Building the Blog</title><link href="https://blog.shadowgears.com/building-the-blog.html" rel="alternate"></link><published>2021-04-11T02:10:00-04:00</published><updated>2021-04-11T02:10:00-04:00</updated><author><name>Garrett McGrath</name></author><id>tag:blog.shadowgears.com,2021-04-11:/building-the-blog.html</id><summary type="html">&lt;p&gt;A rundown of how this blog is written, stored, and&amp;nbsp;published&lt;/p&gt;</summary><content type="html">&lt;p&gt;It&amp;#8217;s been a while since I&amp;#8217;ve spent any serious time looking at blogging, static site generation, and the github pages system so it was no surprise that my knowledge was more than a little out of date.  What was surprising however was how much information online seems to be equally out of date at this point a state that was a little disappointing but not overtly surprising.  It&amp;#8217;s not like github shouts from the rooftop when they change things quietly in the background, especially when those old approaches still&amp;nbsp;work.  &lt;/p&gt;
&lt;p&gt;So this post will serve somewhat as modern documentation for how github user pages can be setup and automated to use &lt;a href="https://blog.getpelican.com/"&gt;Pelican&lt;/a&gt; to generate a blog (like this&amp;nbsp;one).&lt;/p&gt;
&lt;h2 id="how-things-used-to-work"&gt;How things used to&amp;nbsp;work&lt;/h2&gt;
&lt;p&gt;Originally what you would do is create a public repository named &lt;code&gt;&amp;lt;githubuser&amp;gt;.github.io&lt;/code&gt;.  From here the &lt;code&gt;main&lt;/code&gt; or &lt;code&gt;master&lt;/code&gt; branch in the repository would be your raw content, so in pelican a folder full of markdown files.  From there you&amp;#8217;d generate an output folder, that typically you would not capture in git, and merge that into a separate branch named &lt;code&gt;gh-pages&lt;/code&gt;.  This felt like creating some sort of weird hell alternate file stream based approach and was generally kinda difficult to wrap your head around.  The alternative was brute forcing it by simply checking out two different copies of the same repo in separate folders, then just copy/pasting from one to the other and pushing.  This works but at that point, why have them be the same repo?  I suspect this is something github realized somewhere along the way because that&amp;#8217;s how you do it&amp;nbsp;now!&lt;/p&gt;
&lt;h2 id="structure"&gt;Structure&lt;/h2&gt;
&lt;p&gt;Github has simplified things a bit, now you can just put your websites static folder in the main branch (&lt;code&gt;main&lt;/code&gt; or &lt;code&gt;master&lt;/code&gt; depending on repo settings and age).  This allows us some flexibility, the core of this blog is published from a private repository allowing me to not exposed my pelican configs, comment cruft, in dev theme files, and other details around how pelican sites are published in the public repository that serves out what you are&amp;nbsp;reading.&lt;/p&gt;
&lt;p&gt;To get started I made a conda environment to use for local test builds, it&amp;#8217;s overkill but miniconda envs are my default approach, to this we need to add the following packages (this is the contents of my &lt;code&gt;requirements.txt&lt;/code&gt; file, but using the latest versions should work; you might not even need all of&amp;nbsp;this):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="na"&gt;blinker&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;=1.4&lt;/span&gt;
&lt;span class="na"&gt;docutils&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;=0.16&lt;/span&gt;
&lt;span class="na"&gt;feedgenerator&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;=1.9.1&lt;/span&gt;
&lt;span class="na"&gt;Jinja2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;=2.11.3&lt;/span&gt;
&lt;span class="na"&gt;Markdown&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;=3.2.2&lt;/span&gt;
&lt;span class="na"&gt;MarkupSafe&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;=1.1.1&lt;/span&gt;
&lt;span class="na"&gt;pelican&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;=4.5.4&lt;/span&gt;
&lt;span class="na"&gt;pelican-render-math&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;=1.0.3&lt;/span&gt;
&lt;span class="na"&gt;Pygments&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;=2.6.1&lt;/span&gt;
&lt;span class="na"&gt;python-dateutil&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;=2.8.1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;After that environment is created and activated the private repo needs to be cloned into a local folder, and cd&amp;#8217;d into so it&amp;#8217;s your working directory. At this point the basic pelican environment can be created with the &lt;code&gt;pelican-quickstart&lt;/code&gt; command, this will create the default folder structure and config files needed to get everything running. Before adding and committing these changes add a quick &lt;code&gt;.gitignore&lt;/code&gt; file with the following&amp;nbsp;ignores:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nf"&gt;__pycache__&lt;/span&gt;
&lt;span class="na"&gt;.vscode&lt;/span&gt;&lt;span class="err"&gt;/&lt;/span&gt;&lt;span class="p"&gt;*&lt;/span&gt;

&lt;span class="nf"&gt;output&lt;/span&gt;&lt;span class="err"&gt;/&lt;/span&gt;&lt;span class="p"&gt;*&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Once the above is added to git it can be committed and pushed up to the private repository.  This sets up the base you need to build on going&amp;nbsp;forward.&lt;/p&gt;
&lt;h3 id="custom-url"&gt;Custom &lt;span class="caps"&gt;URL&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;If using a custom url (like say &lt;code&gt;blog.shadowgears.com&lt;/code&gt;) you&amp;#8217;ll need to do a few&amp;nbsp;things:&lt;/p&gt;
&lt;p&gt;1) make a folder inside your &lt;code&gt;content&lt;/code&gt; folder named &lt;code&gt;extra&lt;/code&gt; and add a file named &lt;code&gt;CNAME&lt;/code&gt; with the custom domain name in it, that will handle the &lt;span class="caps"&gt;CNAME&lt;/span&gt; id file required by &lt;a href="https://docs.github.com/en/github/working-with-github-pages/configuring-a-custom-domain-for-your-github-pages-site"&gt;github pages&lt;/a&gt;.&lt;br&gt;
2) Add the following to your &lt;code&gt;pelicanconf.py&lt;/code&gt; file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;STATIC_PATHS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;extra&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;extra/CNAME&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  &lt;span class="c1"&gt;#this flags these folders as &amp;#39;static&amp;#39; they will not be run through any parsers&lt;/span&gt;
&lt;span class="n"&gt;EXTRA_PATH_METADATA&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;extra/CNAME&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;path&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;CNAME&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt; &lt;span class="c1"&gt;#this takes the file and puts it at the root of the published directory and names it CNAME per the requirements in the github pages docs&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;3) Add the following to your &lt;code&gt;publishconf.py&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;SITEURL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://&amp;lt;your site url here&amp;gt;&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Adding the above will ensure that the file &lt;code&gt;CNAME&lt;/code&gt; is placed in the root of your output folder every time the site is generated so even if it&amp;#8217;s removed by accident it&amp;#8217;ll be re-instated on the next publish.  Additionally setting the siteurl will make sure all internal links on the site point to the correct location when the site is&amp;nbsp;published.&lt;/p&gt;
&lt;h2 id="auto-publishing-posts"&gt;Auto Publishing&amp;nbsp;Posts&lt;/h2&gt;
&lt;p&gt;At this point you can publish the content, using the &lt;code&gt;make publish&lt;/code&gt; command will push a full processed copy of the content folder to &lt;code&gt;output&lt;/code&gt;, and for some that&amp;#8217;s probably anywhere between good and fine. But that&amp;#8217;s not something I want to have to remember every time I write something new, so the next step is to solve automatic publishing!  We&amp;#8217;ll be pushing from our private repository to the public one so we are going to need a &lt;a href="https://github.com/settings/tokens"&gt;personal access token&lt;/a&gt; with the &lt;code&gt;repo-&amp;gt;public repo&lt;/code&gt; privileges, I&amp;#8217;ve tested no additional privileges are required.  Make sure you note this key value down somewhere you can copy / paste&amp;nbsp;it.&lt;/p&gt;
&lt;p&gt;The next step is going to be adding this as a secret attached to your private repository, this is done in the specific private repos &lt;code&gt;settings-&amp;gt;secrets&lt;/code&gt;, simply add a new secret named &lt;code&gt;APITOKENPUBLISH&lt;/code&gt; and paste the contents of the generated token above in as the value. This will be used by the github action we&amp;#8217;ll be setting up&amp;nbsp;next.&lt;/p&gt;
&lt;p&gt;Now that we&amp;#8217;ve got the basics needed to make this work all that&amp;#8217;s required is adding the automatic workflow to the private repository.  This will be broken into a few&amp;nbsp;steps:&lt;/p&gt;
&lt;p&gt;1) Checkout a copy of the repository.&lt;br&gt;
2) Run &lt;code&gt;make publish&lt;/code&gt; on the contents of the repository.&lt;br&gt;
3) Clone the public repository into a separate location, copy the output of &lt;code&gt;make publish&lt;/code&gt; into it, and push it back&amp;nbsp;out.  &lt;/p&gt;
&lt;p&gt;To get this started we&amp;#8217;ll need a new set of folders at the root of the repository named &lt;code&gt;.github/workflows&lt;/code&gt;, inside here is where we&amp;#8217;ll place the rest of the magic.  Once that folder is in-place we are going to need a yaml file inside it, this can be named whatever but I&amp;#8217;m going for &lt;code&gt;pelican-publish.yml&lt;/code&gt;.  This is going to be a &lt;a href="https://docs.github.com/en/actions/quickstart"&gt;github actions&lt;/a&gt; file and is the reason we made that secret entry further up the post.  A full copy of the action file is included at the end of this post, the following sections break down the sub&amp;nbsp;parts.&lt;/p&gt;
&lt;h3 id="setup-the-environment"&gt;Setup the&amp;nbsp;Environment&lt;/h3&gt;
&lt;p&gt;This initial segment sets up some rules and the python environment.  We&amp;#8217;ll be naming the action &lt;code&gt;Pelican-Publisher&lt;/code&gt;, restricting it to only run on pushes to our source repository, and instructing it to run on ubuntu.  This last part we could probably make something lighter weight just so it runs a little faster (this process is slower than I&amp;#8217;d like) but for simplicity and compatibility with most published documentation and actions I stuck with ubuntu here.  The last bits of this step check out the private repository and creates a python&amp;nbsp;environment &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Pelican-Publisher&lt;/span&gt;

&lt;span class="c1"&gt;# Run this workflow ever time a new commit is pushed ot the repo&lt;/span&gt;
&lt;span class="nt"&gt;on&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;push&lt;/span&gt;

&lt;span class="nt"&gt;jobs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;publish&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Publish&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;runs-on&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;ubuntu-latest&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;steps&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="c1"&gt;## pull the committed code into an environment.&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Checkout Code&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;uses&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;actions/checkout@v2&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Set up Python 3.9&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;uses&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;actions/setup-python@v2&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;with&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nt"&gt;python-version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;3.9&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Install Dependencies&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;run&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;|&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="no"&gt;python -m pip install --upgrade pip&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="no"&gt;pip install -r requirements.txt&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id="build-the-website"&gt;Build the&amp;nbsp;Website&lt;/h3&gt;
&lt;p&gt;This sounds like it should be long or complicated, it&amp;#8217;s neither.  If test &lt;code&gt;make publish&lt;/code&gt; commands worked on the local system the adding this to the above will build the website&amp;nbsp;fresh:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Build Site&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;run&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;|&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="no"&gt;make publish&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If this doesn&amp;#8217;t work, there&amp;#8217;s probably an issue with your local &lt;code&gt;make publish&lt;/code&gt; or with your requirements file, verify those are correct then revisit&amp;nbsp;this.&lt;/p&gt;
&lt;h3 id="publish-the-website"&gt;Publish the&amp;nbsp;Website&lt;/h3&gt;
&lt;p&gt;The actual complicated part of this is here, we&amp;#8217;ll be making use of user &lt;a href="https://github.com/cpina"&gt;cpina&lt;/a&gt;&amp;#8216;s &lt;a href="https://github.com/cpina/github-action-push-to-another-repository"&gt;github-action-push-to-another-repository&lt;/a&gt; published action to do the heavy lifting here.  It&amp;#8217;ll require a few quick inputs, mostly involving your github &lt;span class="caps"&gt;ID&lt;/span&gt; or the afore mentioned &lt;span class="caps"&gt;API&lt;/span&gt; key&amp;nbsp;secret.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="c1"&gt;# push generated site to public repo&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Pushes to another repository&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;push_directory&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;uses&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;cpina/github-action-push-to-another-repository@v1.2&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;env&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nt"&gt;API_TOKEN_GITHUB&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;${{ secrets.APITOKENPUBLISH }}&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;with&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nt"&gt;source-directory&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;#39;output&amp;#39;&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nt"&gt;destination-github-username&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&amp;lt;your&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;github&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;id&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;here&amp;gt;&amp;#39;&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nt"&gt;destination-repository-name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&amp;lt;your&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;github&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;id&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;here&amp;gt;.github.io&amp;#39;&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nt"&gt;user-email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;&amp;lt;your email address here so the commit is signed correctly&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nt"&gt;commit-message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Automated Update&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nt"&gt;target-branch&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;main&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This action does a few things. First it checks out the target repository, in this case our public &lt;code&gt;&amp;lt;username&amp;gt;.github.io&lt;/code&gt; repository. Then it makes a new folder and copies just the &lt;code&gt;.git&lt;/code&gt; subfolder from the checked out repository into there. Over top of this it copies the contents of the folder &lt;code&gt;output&lt;/code&gt;, and finally issues a commit and push of this newly minted git&amp;nbsp;repository.&lt;/p&gt;
&lt;p&gt;Doing it this way is important in that it ensures you have a completely clean copy of the generated output as your new website version instead of possibly missing an article deletion or restructuring that doesn&amp;#8217;t get tracked&amp;nbsp;properly.&lt;/p&gt;
&lt;h3 id="putting-it-all-together"&gt;Putting it all&amp;nbsp;together&lt;/h3&gt;
&lt;p&gt;This is the full action file ready to be copy/pasted and updated to your own&amp;nbsp;settings.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Pelican-Publisher&lt;/span&gt;

&lt;span class="c1"&gt;# Run this workflow ever time a new commit is pushed ot the repo&lt;/span&gt;
&lt;span class="nt"&gt;on&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;push&lt;/span&gt;

&lt;span class="nt"&gt;jobs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;publish&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Publish&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;runs-on&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;ubuntu-latest&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;steps&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="c1"&gt;## pull the committed code into an environment.&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Checkout Code&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;uses&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;actions/checkout@v2&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Set up Python 3.9&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;uses&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;actions/setup-python@v2&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;with&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nt"&gt;python-version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;3.9&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Install Dependencies&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;run&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;|&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="no"&gt;python -m pip install --upgrade pip&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="no"&gt;pip install -r requirements.txt&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Build Site&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;run&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;|&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="no"&gt;make publish&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="c1"&gt;# push generated site to public repo&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Pushes to another repository&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;push_directory&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;uses&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;cpina/github-action-push-to-another-repository@v1.2&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;env&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nt"&gt;API_TOKEN_GITHUB&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;${{ secrets.APITOKENPUBLISH }}&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;with&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nt"&gt;source-directory&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;#39;output&amp;#39;&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nt"&gt;destination-github-username&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&amp;lt;your&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;github&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;id&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;here&amp;gt;&amp;#39;&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nt"&gt;destination-repository-name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&amp;lt;your&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;github&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;id&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;here&amp;gt;.github.io&amp;#39;&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nt"&gt;user-email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;&amp;lt;your email address here so the commit is signed correctly&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nt"&gt;commit-message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Automated Update&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nt"&gt;target-branch&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;main&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="adding-content"&gt;Adding&amp;nbsp;Content&lt;/h2&gt;
&lt;p&gt;In the process of writing this article I&amp;#8217;ve gone from using VSCode to write it, to moving to &lt;span class="caps"&gt;ZETTLR&lt;/span&gt;, and then switching back to vscode for a few reasons.  Initially when I was developing this article in vscode I&amp;#8217;d attempted to install a spell checker to make sure my writing is at least spelled right if not you know, comprehensible.  Unfortunately the recommended spell checker just seemed to freak out and highlight the entire markdown file as spelled incorrectly.  So I removed that addon and migrated over to editing in a zettlr window, this has some upsides I really liked. The spell checking is sane, rendering markdown &amp;#8216;live&amp;#8217; as you edit it works incredibly well.  Unfortunately the folder handling is rather clunky, zettlr has opinions about how things are organized and they don&amp;#8217;t mesh with how I work as well as I thought.  Additionally the linux version seems to have some serious keyboard shortcut collisions that I didn&amp;#8217;t have the willpower to fix; when you are trying to paste with &lt;code&gt;ctrl+v&lt;/code&gt; and it instead keeps warping you to the bottom of the page for some reason, it&amp;#8217;s time to stop fighting a tool not setup to do what you want. So I&amp;#8217;m back to using vscode as my editor, however in the mean time I&amp;#8217;ve found a different spellchecker for vscode that acts more sanely.  The &lt;a href="https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker"&gt;Code Spell Checker&lt;/a&gt; by Street Side Software works more or less how I&amp;#8217;d expect. The only nagging point currently is having to hit &lt;code&gt;ctrl+.&lt;/code&gt; instead of right clicking on a misspelled word in order to fix it.  All in all, it works and that&amp;#8217;s what&amp;#8217;s important&amp;nbsp;here.&lt;/p&gt;
&lt;h2 id="notes"&gt;Notes&lt;/h2&gt;
&lt;p&gt;Below are notes and references used to work out the details&amp;nbsp;above.&lt;/p&gt;
&lt;p&gt;This blog is built and published using the &lt;a href="https://docs.getpelican.com/en/3.6.3/index.html"&gt;Pelican static site generator system&lt;/a&gt; in a two stage&amp;nbsp;setup.&lt;/p&gt;
&lt;p&gt;reference material on the current state of github&amp;nbsp;pages:&lt;/p&gt;
&lt;p&gt;actions reference&amp;nbsp;materials:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;https://github.com/marketplace/actions/push-directory-to-another-repository&lt;/li&gt;
&lt;li&gt;https://github.com/cpina/push-to-another-repository-example&lt;/li&gt;
&lt;li&gt;https://nolanbconaway.github.io/pelican-deploy-gh-actions/pages/deployment-on-github-pages.html&lt;/li&gt;
&lt;li&gt;https://docs.github.com/en/actions/quickstart&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;currently using: github actions based on ubuntu-latest, python setup commands, and the push directory to another repository&amp;nbsp;action.&lt;/p&gt;</content><category term="HowTo"></category><category term="deployment"></category><category term="blog"></category></entry><entry><title>Glass Canopy Campaign, Report 0</title><link href="https://blog.shadowgears.com/glasscanopy-campaign-report-0.html" rel="alternate"></link><published>2021-02-15T16:30:00-05:00</published><updated>2021-02-15T16:30:00-05:00</updated><author><name>Garrett McGrath</name></author><id>tag:blog.shadowgears.com,2021-02-15:/glasscanopy-campaign-report-0.html</id><summary type="html">&lt;p&gt;Campaign setup and initial adventure&amp;nbsp;report.&lt;/p&gt;</summary><content type="html">&lt;!-- Status: Draft --&gt;

&lt;p&gt;This document serves as a starting record of the adventures and misadventures of the Luna Invictus adventuring troop and their allies in the Scaleshorn Union.  The Scaleshorn Union operates out of the freeport city of Gillamoore acting a mixture of investigator, mercenary, and heroes for hire.  Luna Invictus&amp;#8217;s inaugural mission found them investigating the source of several lost shipments of goods, from a small farming village to the city at the behest of a local trader.  And coming home with more than they bargained&amp;nbsp;for.&lt;/p&gt;
&lt;h2 id="haki-after-action-report"&gt;Haki: After Action&amp;nbsp;Report&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Initially the group and client go off on an.. odd foot due to Kaelin&amp;#8217;s frankly inexplicable decision to burn the clients admittedly disabled cart. Who burns a&amp;nbsp;cart!?&lt;/li&gt;
&lt;li&gt;The tenor seems to have improved when they managed to deliver him safely to the town and eliminated a set of darklings preparing to attack the town. During the next day the group split up to investigate an array of strange incidents around the area including several incidents of theft, sabotage, and damaging crops.  During the course of the investigation two factions are discovered to be at play.  The previously encountered darklings, and a troup of modrons; both operating under unknown&amp;nbsp;circumstances.&lt;/li&gt;
&lt;li&gt;Merla, Dath, and Feather discovered the modrons while investigating an apparent attack at one of the farmsteads, pursuing them to recover a small child trapped in a crystal&amp;nbsp;shell.&lt;/li&gt;
&lt;li&gt;Kaelin, Fang, and a local named Johns meanwhile encounter and dispatch most of the darklings before they can cause more issues.  Many of the stolen supplies were found in a small cave the darklings used as a hideout while operating in the&amp;nbsp;area.&lt;/li&gt;
&lt;li&gt;That evening the remaining darklings attack attempting to abscond with the child. All but one were eliminated and the last was released to flee before the sun turned it to&amp;nbsp;ash.&lt;/li&gt;
&lt;li&gt;Johns accompanied the group back back to Gillamoore to be evaluated for membership in the Scaleshorn&amp;nbsp;Union.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="conclusions"&gt;Conclusions&lt;/h3&gt;
&lt;p&gt;It appears highly likely both groups were hunting the child in the crystal shell, the stasis isolation the boy was placed in implies a possible physical threat; or simply attempting to deliver the boy unharmed to their masters.  Several possible guild resources could provide insight on the nature of the nature of this crystal encasement and whether the child is even alive, but I suspect there will be no quick answers on who or what was truly after&amp;nbsp;him.&lt;/p&gt;
&lt;h2 id="client-feedback"&gt;Client&amp;nbsp;Feedback&lt;/h2&gt;
&lt;p&gt;Why would you burn a cart? This is coming out of your fee!&lt;br&gt;
The cart incident aside, once the child was removed from the area neither group appears to have returned and the town has returned to it&amp;#8217;s quiet existence.  While their methods may be questionable, overall your subordinated did their job protecting the town&amp;nbsp;effectively.&lt;/p&gt;
&lt;h2 id="opposition"&gt;Opposition&lt;/h2&gt;
&lt;p&gt;Raif, the information you have gleaned is most useful but failure will not be tolerated. It is clear some reconditioning is required, you will report to the tanks for&amp;nbsp;revision.&lt;/p&gt;</content><category term="Glass Canopy"></category><category term="Glass Canopy"></category><category term="DND"></category></entry></feed>